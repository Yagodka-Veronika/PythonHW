# # Задача 10:
# #  На столе лежат n монеток. Некоторые из них лежат вверх решкой, а
# # некоторые – гербом. Определите минимальное число монеток, которые нужно
# # перевернуть, чтобы все монетки были повернуты вверх одной и той же
# # стороной. Выведите минимальное количество монет, которые нужно
# # перевернуть.


# import random

# n_moneys = int(input("Введите количество монеток: "))

# # Генерация списка: орел(0)-решка(1)
# sides = [random.randint(0, 1) for _ in range(n_moneys)]

# # Вывод результата рандома. enumerate - для генерации индексов вместе с элементами списка sides 
# # это позволяет  выводить номер каждой монетки, начиная с 1, а не с 0.
# for i, side in enumerate(sides):
#     print(f"Монетка {i+1}: {side}")

# # Подсчет суммы решек
# res_side = sum(sides)

# # Определение минимального значения
# minimus = min(res_side, n_moneys - res_side)

# print("Количество монеток, которых нужно перевернуть:", minimus)
def task10 ():
    import random

    n = int(input("Ведите количество монеток: "))

    count_g = 0
    count_r = 0
    for i in range(n):
        if random.randint(0, 1) == 0:
            count_g += 1
        else:
            count_r += 1

    print(f"Вверх гербом - {count_g}, вверх решкой - {count_r}")
    if count_g < count_r:
        print(f"Минимальное количество монет: {count_g} ")
    else:
        print(f"Минимальное количество монет: {count_r} ")

# import random

# n_moneys = int(input("Введите количество монеток: "))

# # Генерация списка: орел(0)-решка(1)
# sides = [random.randint(0, 1) for _ in range(n_moneys)]

# # Вывод результата рандома. enumerate - для генерации индексов вместе с элементами списка sides 
# # это позволяет  выводить номер каждой монетки, начиная с 1, а не с 0.
# for i, side in enumerate(sides):
#     print(f"Монетка {i+1}: {side}")

# # Подсчет суммы решек
# res_side = sum(sides)

# # Определение минимального значения
# minimus = min(res_side, n_moneys - res_side)

# print("Количество монеток, которых нужно перевернуть:", minimus)





# Задача 12
#  Петя и Катя – брат и сестра. Петя – студент, а Катя – школьница. Петя
# помогает Кате по математике. Он задумывает два натуральных числа X и Y
# (X,Y≤1000), а Катя должна их отгадать. Для этого Петя делает две подсказки.
# Он называет сумму этих чисел S и их произведение P. Помогите Кате отгадать
# задуманные Петей числа.

def task12 ():
    import math

    S = int(input("Введите сумму чисел: "))
    P = int(input("Введите произведение чисел: "))

    for i in range(S):
        for j in range(P):
         if S == i + j and P == i * j:
             print(i, j)


# import math

# # x+y=S
# # x=S-y
# # x*y=P
# # P/x=y

# b = int(input("Введите сумму чисел "))
# c = int(input("Введите произведение чисел "))

# k = -b / 2
# D = k ** 2 - c  # D = -k^2 - ac
# if D > 0:
#     x = -k + D ** 0.5  # x1 = (-k+√D)/a
#     y = -k - D ** 0.5  # x1 = (-k-√D)/a
# elif D == 0:
#     y = x = -k + D ** 0.5  # x1 = (-k+√D)/a
# else:
#     х = "Нет"
#     y = " корней"
# print(x, y)



# #  Задача 14
# # Требуется вывести все целые степени двойки (т.е. числа вида 2k), не
# # превосходящие числа N.


def task14 ():
    N = int(input(f"Введите число N: "))
    for i in range(N):
        if 2**i <= N:
            print(f"{2**i}", end=" ")
        else:
            break